import {
  __commonJS
} from "./chunk-Y2F7D3TJ.js";

// node_modules/scroll-smooth/dist/tools.js
var require_tools = __commonJS({
  "node_modules/scroll-smooth/dist/tools.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var easeFunctions = exports.easeFunctions = {
      linear: function linear(t) {
        return t;
      },
      easeInQuad: function easeInQuad(t) {
        return t * t;
      },
      easeOutQuad: function easeOutQuad(t) {
        return t * (2 - t);
      },
      easeInOutQuad: function easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
      },
      easeInCubic: function easeInCubic(t) {
        return t * t * t;
      },
      easeOutCubic: function easeOutCubic(t) {
        return --t * t * t + 1;
      },
      easeInOutCubic: function easeInOutCubic(t) {
        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
      },
      easeInQuart: function easeInQuart(t) {
        return t * t * t * t;
      },
      easeOutQuart: function easeOutQuart(t) {
        return 1 - --t * t * t * t;
      },
      easeInOutQuart: function easeInOutQuart(t) {
        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
      },
      easeInQuint: function easeInQuint(t) {
        return t * t * t * t * t;
      },
      easeOutQuint: function easeOutQuint(t) {
        return 1 + --t * t * t * t * t;
      },
      easeInOutQuint: function easeInOutQuint(t) {
        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
      }
    };
    var isNumeric = exports.isNumeric = function isNumeric2(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    };
    var setPosition = exports.setPosition = function setPosition2(begin, end, elapsed, duration) {
      var ease = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "easeInOutCubic";
      return elapsed > duration ? end : begin + (end - begin) * easeFunctions[ease](elapsed / duration);
    };
    var calcEndPoint = exports.calcEndPoint = function calcEndPoint2(target) {
      var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : window;
      var offset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      if (isNumeric(target)) {
        return parseInt(target) + offset;
      }
      var y = context === window || context === document.documentElement ? window.pageYOffset : context.scrollTop - context.getBoundingClientRect().top;
      var distance = target.nodeName.toLowerCase() === "html" ? -y : target.getBoundingClientRect().top + y;
      return distance + offset;
    };
  }
});

// node_modules/scroll-smooth/dist/scrollSmooth.js
var require_scrollSmooth = __commonJS({
  "node_modules/scroll-smooth/dist/scrollSmooth.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var _tools = require_tools();
    exports.default = function(target) {
      var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 500 : _ref$duration, _ref$context = _ref.context, context = _ref$context === void 0 ? window : _ref$context, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? 0 : _ref$offset, _ref$ease = _ref.ease, ease = _ref$ease === void 0 ? "easeInOutCubic" : _ref$ease, callback = _ref.callback;
      if ((typeof window === "undefined" ? "undefined" : _typeof(window)) !== "object")
        return;
      var start = context.scrollTop !== null && context.scrollTop !== void 0 ? context.scrollTop : window.pageYOffset;
      var end = (0, _tools.calcEndPoint)(target, context, offset);
      var clock = performance.now();
      var rAF = window.requestAnimationFrame;
      var tick = function tick2() {
        var elapsed = performance.now() - clock;
        var pos = (0, _tools.setPosition)(start, end, elapsed, duration, ease);
        if (context !== window) {
          context.scrollTop = pos;
        } else {
          window.scroll(0, pos);
        }
        if (elapsed > duration) {
          typeof callback === "function" && callback(target);
        } else {
          rAF(tick2);
        }
      };
      tick();
    };
    module.exports = exports["default"];
  }
});

// node_modules/scroll-smooth/dist/anchorScroll.js
var require_anchorScroll = __commonJS({
  "node_modules/scroll-smooth/dist/anchorScroll.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _scrollSmooth = require_scrollSmooth();
    var _scrollSmooth2 = _interopRequireDefault(_scrollSmooth);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = function() {
      var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$query = _ref.query, query = _ref$query === void 0 ? '[href^="#"]:not([href="#"]' : _ref$query, _ref$match = _ref.match, match = _ref$match === void 0 ? function(target) {
        return document.getElementById(target.hash.substring(1));
      } : _ref$match, _ref$hashChange = _ref.hashChange, hashChange = _ref$hashChange === void 0 ? true : _ref$hashChange, scrollSmoothConfig = _ref.scrollSmoothConfig;
      var links = document.querySelectorAll(query);
      var handler = function handler2(e) {
        e.preventDefault();
        var dest = match(e.target);
        if (!dest)
          return;
        if (hashChange) {
          history.replaceState(null, null, "#" + dest.id);
        }
        (0, _scrollSmooth2.default)(dest, _extends({}, scrollSmoothConfig));
      };
      Array.from(links).map(function(link) {
        link.addEventListener("click", handler, false);
      });
    };
    module.exports = exports["default"];
  }
});

// node_modules/scroll-smooth/dist/observe.js
var require_observe = __commonJS({
  "node_modules/scroll-smooth/dist/observe.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _toConsumableArray(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      } else {
        return Array.from(arr);
      }
    }
    exports.default = function() {
      var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$activeClass = _ref.activeClass, activeClass = _ref$activeClass === void 0 ? "active" : _ref$activeClass, _ref$query = _ref.query, query = _ref$query === void 0 ? '[href^="#"]:not([href="#"]):not([href="#0"])' : _ref$query, _ref$threshold = _ref.threshold, threshold = _ref$threshold === void 0 ? [0.25, 0.5, 0.75] : _ref$threshold, _ref$detectType = _ref.detectType, detectType = _ref$detectType === void 0 ? "max" : _ref$detectType;
      var options = { threshold };
      var removeClass = function removeClass2(node) {
        return node.classList.remove(activeClass);
      };
      var addClass = function addClass2(node) {
        return node.classList.add(activeClass);
      };
      var unsetAllActives = function unsetAllActives2() {
        document.querySelectorAll("." + activeClass).forEach(removeClass);
      };
      var setActive = function setActive2(activeNode) {
        unsetAllActives();
        addClass(document.querySelector('a[href="#' + activeNode.id + '"]'));
      };
      var callback = function callback2(entries) {
        entries.forEach(function(entry) {
          if (entry.intersectionRatio >= Math[detectType].apply(Math, _toConsumableArray(threshold))) {
            setActive(entry.target);
          }
        });
      };
      var links = document.querySelectorAll(query);
      var observer = new IntersectionObserver(callback, options);
      var observeTarget = function observeTarget2(link) {
        var target = document.querySelector("#" + link.hash.slice(1));
        observer.observe(target);
      };
      links.forEach(observeTarget);
    };
    module.exports = exports["default"];
  }
});

// node_modules/scroll-smooth/dist/index.js
var require_dist = __commonJS({
  "node_modules/scroll-smooth/dist/index.js"(exports, module) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _scrollSmooth = require_scrollSmooth();
    var _scrollSmooth2 = _interopRequireDefault(_scrollSmooth);
    var _tools = require_tools();
    var _anchorScroll = require_anchorScroll();
    var _anchorScroll2 = _interopRequireDefault(_anchorScroll);
    var _observe = require_observe();
    var _observe2 = _interopRequireDefault(_observe);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = {
      to: _scrollSmooth2.default,
      calcEndPoint: _tools.calcEndPoint,
      anchorScroll: _anchorScroll2.default,
      observe: _observe2.default
    };
    module.exports = exports["default"];
  }
});
export default require_dist();
//# sourceMappingURL=scroll-smooth.js.map
